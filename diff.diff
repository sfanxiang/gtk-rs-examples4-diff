---
 src/bin/accessibility.rs           |   2 +-
 src/bin/basic.rs                   |   5 +-
 src/bin/builder_basics.glade       |  23 +-
 src/bin/builder_basics.rs          |   2 +-
 src/bin/builder_signal.glade       |  23 +-
 src/bin/builder_signal.rs          |   7 +-
 src/bin/builders.rs                |   5 +-
 src/bin/cairo_png.rs               |  29 --
 src/bin/cairo_threads.rs           |  13 +-
 src/bin/cairotest.rs               |  14 +-
 src/bin/child-properties.rs        |  89 ----
 src/bin/clipboard_simple.rs        |  60 ++-
 src/bin/clock.rs                   |   9 +-
 src/bin/css.rs                     |  19 +-
 src/bin/drag_and_drop.rs           |  25 +-
 src/bin/drag_and_drop_textview.rs  |  19 +-
 src/bin/entry_completion.rs        |  11 +-
 src/bin/gio_futures.rs             | 130 ------
 src/bin/gio_futures_await.rs       |  76 ----
 src/bin/grid.glade                 | 100 ++---
 src/bin/grid.rs                    |  30 +-
 src/bin/gtktest.glade              | 626 +++++++++--------------------
 src/bin/gtktest.rs                 |  36 +-
 src/bin/list_store.rs              |  26 +-
 src/bin/listbox_model.rs           |  28 +-
 src/bin/menu_bar.rs                |  29 +-
 src/bin/menu_bar_system.rs         |  15 +-
 src/bin/multi_windows.rs           |  10 +-
 src/bin/multithreading_context.rs  |   5 +-
 src/bin/notebook.rs                |  13 +-
 src/bin/overlay.rs                 |  13 +-
 src/bin/pango_attributes.rs        |   5 +-
 src/bin/progress_tracker.rs        |  15 +-
 src/bin/simple_treeview.rs         |   4 +-
 src/bin/sync_widgets.glade         |  23 +-
 src/bin/sync_widgets.rs            |   3 +-
 src/bin/text_viewer.glade          |  36 +-
 src/bin/text_viewer.rs             |   5 +-
 src/bin/transparent_main_window.rs |  34 +-
 src/bin/tree_model_sort.rs         |   8 +-
 src/bin/treeview.rs                |   5 +-
 41 files changed, 477 insertions(+), 1153 deletions(-)
 delete mode 100644 src/bin/cairo_png.rs
 delete mode 100644 src/bin/child-properties.rs
 mode change 100755 => 100644 src/bin/entry_completion.rs
 delete mode 100644 src/bin/gio_futures.rs
 delete mode 100644 src/bin/gio_futures_await.rs

diff --git a/src/bin/accessibility.rs b/src/bin/accessibility.rs
index c42addd..b2a494a 100644
--- a/src/bin/accessibility.rs
+++ b/src/bin/accessibility.rs
@@ -51,7 +51,7 @@ fn build_ui(application: &gtk::Application) {
         label.set_text(&value.to_string());
     });
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/basic.rs b/src/bin/basic.rs
index deaaf3d..6902fec 100644
--- a/src/bin/basic.rs
+++ b/src/bin/basic.rs
@@ -16,15 +16,14 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindow::new(application);
 
     window.set_title("First GTK+ Program");
-    window.set_border_width(10);
     window.set_position(gtk::WindowPosition::Center);
     window.set_default_size(350, 70);
 
     let button = gtk::Button::new_with_label("Click me!");
+    button.set_property_margin(10);
 
     window.add(&button);
-
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/builder_basics.glade b/src/bin/builder_basics.glade
index 1e64bb9..c2d4f95 100644
--- a/src/bin/builder_basics.glade
+++ b/src/bin/builder_basics.glade
@@ -1,6 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkApplicationWindow" id="window1">
     <property name="title" translatable="yes">Builder Basics</property>
     <property name="default_width">320</property>
@@ -12,47 +11,29 @@
     </child>
   </object>
   <object class="GtkMessageDialog" id="messagedialog1">
-    <property name="can_focus">False</property>
     <property name="type_hint">dialog</property>
     <property name="transient_for">window1</property>
-    <child internal-child="vbox">
+    <child internal-child="message_area">
       <object class="GtkBox" id="messagedialog-vbox1">
         <property name="name">msgdialog</property>
         <property name="width_request">300</property>
-        <property name="can_focus">False</property>
         <property name="tooltip_markup" translatable="yes">Thank you for trying this example</property>
-        <property name="resize_mode">immediate</property>
         <property name="orientation">vertical</property>
         <property name="spacing">2</property>
         <child internal-child="action_area">
-          <object class="GtkButtonBox" id="messagedialog-action_area1">
-            <property name="can_focus">False</property>
-            <property name="layout_style">end</property>
+          <object class="GtkBox" id="messagedialog-action_area1">
             <child>
               <placeholder/>
             </child>
           </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="pack_type">end</property>
-            <property name="position">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkLabel" id="label2">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="label" translatable="yes">You have pressed the button</property>
             <property name="ellipsize">end</property>
             <property name="width_chars">40</property>
             <property name="lines">1</property>
           </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="position">2</property>
-          </packing>
         </child>
       </object>
     </child>
diff --git a/src/bin/builder_basics.rs b/src/bin/builder_basics.rs
index 902645f..3390611 100644
--- a/src/bin/builder_basics.rs
+++ b/src/bin/builder_basics.rs
@@ -28,7 +28,7 @@ fn build_ui(application: &gtk::Application) {
         dialog.hide();
     });
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/builder_signal.glade b/src/bin/builder_signal.glade
index 5a9844b..adf2006 100644
--- a/src/bin/builder_signal.glade
+++ b/src/bin/builder_signal.glade
@@ -1,6 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <interface>
-  <!-- interface-requires gtk+ 3.0 -->
   <object class="GtkApplicationWindow" id="window1">
     <property name="title" translatable="yes">Builder Signal</property>
     <property name="default_width">320</property>
@@ -13,47 +12,29 @@
     </child>
   </object>
   <object class="GtkMessageDialog" id="messagedialog1">
-    <property name="can_focus">False</property>
     <property name="type_hint">dialog</property>
     <property name="transient_for">window1</property>
-    <child internal-child="vbox">
+    <child internal-child="message_area">
       <object class="GtkBox" id="messagedialog-vbox1">
         <property name="name">msgdialog</property>
         <property name="width_request">300</property>
-        <property name="can_focus">False</property>
         <property name="tooltip_markup" translatable="yes">Thank you for trying this example</property>
-        <property name="resize_mode">immediate</property>
         <property name="orientation">vertical</property>
         <property name="spacing">2</property>
         <child internal-child="action_area">
-          <object class="GtkButtonBox" id="messagedialog-action_area1">
-            <property name="can_focus">False</property>
-            <property name="layout_style">end</property>
+          <object class="GtkBox" id="messagedialog-action_area1">
             <child>
               <placeholder/>
             </child>
           </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="pack_type">end</property>
-            <property name="position">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkLabel" id="label2">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="label" translatable="yes">You have pressed the button</property>
             <property name="ellipsize">end</property>
             <property name="width_chars">40</property>
             <property name="lines">1</property>
           </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="position">2</property>
-          </packing>
         </child>
       </object>
     </child>
diff --git a/src/bin/builder_signal.rs b/src/bin/builder_signal.rs
index d7a2196..1bbec3e 100644
--- a/src/bin/builder_signal.rs
+++ b/src/bin/builder_signal.rs
@@ -23,13 +23,8 @@ fn build_ui(application: &gtk::Application) {
         .expect("Couldn't get messagedialog1");
 
     builder.connect_signals(move |_, handler_name| {
-        // This is the one-time callback to register signals.
-        // Here we map each handler name to its handler.
-
         if handler_name == "button1_clicked" {
             let dialog = dialog.clone();
-
-            // Return the signal handler.
             Box::new(move |_| {
                 dialog.run();
                 dialog.hide();
@@ -40,7 +35,7 @@ fn build_ui(application: &gtk::Application) {
         }
     });
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/builders.rs b/src/bin/builders.rs
index a13423b..c69a79f 100644
--- a/src/bin/builders.rs
+++ b/src/bin/builders.rs
@@ -16,20 +16,21 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindowBuilder::new()
         .application(application)
         .title("First GTK+ Program")
-        .border_width(10)
         .window_position(gtk::WindowPosition::Center)
         .default_width(350)
         .default_height(70)
         .build();
 
     let button = gtk::LockButtonBuilder::new()
+        .margin(10)
+        .visible(true)
         .text_lock("Lock")
         .text_unlock("Unlock")
         .build();
 
     window.add(&button);
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/cairo_png.rs b/src/bin/cairo_png.rs
deleted file mode 100644
index d3c4fe7..0000000
--- a/src/bin/cairo_png.rs
+++ /dev/null
@@ -1,29 +0,0 @@
-//! # Cairo drawing to PNG
-//!
-//! This sample demonstrates how to create `ImageSurface`, draw on it
-//! and then save result to PNG file.
-//! Analog of C# example http://www.mgsloan.com/cairo_tut/stroke.cs
-
-extern crate cairo;
-
-use cairo::{Context, Format, ImageSurface};
-use std::fs::File;
-
-fn main() {
-    let surface = ImageSurface::create(Format::ARgb32, 120, 120).expect("Can't create surface");
-    let cr = Context::new(&surface);
-    // Examples are in 1.0 x 1.0 coordinate space
-    cr.scale(120.0, 120.0);
-
-    // Drawing code goes here
-    cr.set_line_width(0.1);
-    cr.set_source_rgb(0.0, 0.0, 0.0);
-    cr.rectangle(0.25, 0.25, 0.5, 0.5);
-    cr.stroke();
-
-    let mut file = File::create("file.png").expect("Couldn't create 'file.png'");
-    match surface.write_to_png(&mut file) {
-        Ok(_) => println!("file.png created"),
-        Err(_) => println!("Error create file.png"),
-    }
-}
diff --git a/src/bin/cairo_threads.rs b/src/bin/cairo_threads.rs
index 91aaa0a..bf2e92e 100644
--- a/src/bin/cairo_threads.rs
+++ b/src/bin/cairo_threads.rs
@@ -12,6 +12,7 @@ use std::time::Duration;
 
 use cairo::{Context, Format, ImageSurface};
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 use gtk::{ApplicationWindow, DrawingArea};
 
@@ -212,7 +213,7 @@ fn build_ui(application: &gtk::Application) {
 
     // Whenever the drawing area has to be redrawn, render the latest images in the correct
     // locations
-    area.connect_draw(clone!(workspace => move |_, cr| {
+    area.set_draw_func(Some(Box::new(clone!(workspace => move |_, cr, _, _| {
         let (ref images, ref origins, _) = *workspace;
 
         for (image, origin) in images.iter().zip(origins.iter()) {
@@ -220,12 +221,10 @@ fn build_ui(application: &gtk::Application) {
                 draw_image_if_dirty(&cr, surface, *origin, (WIDTH, HEIGHT));
             });
         }
-
-        Inhibit(false)
-    }));
+    }))));
 
     ready_rx.attach(None, move |(thread_num, image)| {
-        let (ref images, ref origins, ref workers) = *workspace;
+        let (ref images, _, ref workers) = *workspace;
 
         // Swap the newly received image with the old stored one and send the old one back to
         // the worker thread
@@ -233,12 +232,12 @@ fn build_ui(application: &gtk::Application) {
         let image = images[thread_num].replace(image);
         let _ = tx.send(image);
 
-        area.queue_draw_area(origins[thread_num].0, origins[thread_num].1, WIDTH, HEIGHT);
+        area.queue_draw();
 
         Continue(true)
     });
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/cairotest.rs b/src/bin/cairotest.rs
index 06b5066..482c81a 100644
--- a/src/bin/cairotest.rs
+++ b/src/bin/cairotest.rs
@@ -12,7 +12,7 @@ use gtk::DrawingArea;
 use cairo::{Context, FontSlant, FontWeight};
 
 fn build_ui(application: &gtk::Application) {
-    drawable(application, 500, 500, |_, cr| {
+    drawable(application, 500, 500, |_, cr, _, _| {
         cr.set_dash(&[3., 2., 1.], 1.);
         assert_eq!(cr.get_dash(), (vec![3., 2., 1.], 1.));
 
@@ -62,11 +62,9 @@ fn build_ui(application: &gtk::Application) {
 
         cr.arc(0.5 + eye_dx, eye_y, 0.05, 0.0, PI * 2.);
         cr.fill();
-
-        Inhibit(false)
     });
 
-    drawable(application, 500, 500, |_, cr| {
+    drawable(application, 500, 500, |_, cr, _, _| {
         cr.scale(500f64, 500f64);
 
         cr.select_font_face("Sans", FontSlant::Normal, FontWeight::Normal);
@@ -87,8 +85,6 @@ fn build_ui(application: &gtk::Application) {
         cr.arc(0.04, 0.53, 0.02, 0.0, PI * 2.);
         cr.arc(0.27, 0.65, 0.02, 0.0, PI * 2.);
         cr.fill();
-
-        Inhibit(false)
     });
 }
 
@@ -108,15 +104,15 @@ fn main() {
 
 pub fn drawable<F>(application: &gtk::Application, width: i32, height: i32, draw_fn: F)
 where
-    F: Fn(&DrawingArea, &Context) -> Inhibit + 'static,
+    F: Fn(&DrawingArea, &Context, i32, i32) + 'static,
 {
     let window = gtk::ApplicationWindow::new(application);
     let drawing_area = Box::new(DrawingArea::new)();
 
-    drawing_area.connect_draw(draw_fn);
+    drawing_area.set_draw_func(Some(Box::new(draw_fn)));
 
     window.set_default_size(width, height);
 
     window.add(&drawing_area);
-    window.show_all();
+    window.show();
 }
diff --git a/src/bin/child-properties.rs b/src/bin/child-properties.rs
deleted file mode 100644
index b9f77c7..0000000
--- a/src/bin/child-properties.rs
+++ /dev/null
@@ -1,89 +0,0 @@
-//! # Child Properties
-//!
-//! This sample demonstrates how to set child properties.
-
-#![crate_type = "bin"]
-
-extern crate gio;
-extern crate gtk;
-
-use gio::prelude::*;
-use gtk::prelude::*;
-use gtk::Orientation::Vertical;
-use gtk::{ApplicationWindow, Button, Label, PackType};
-
-use std::env::args;
-use std::str::FromStr;
-
-// make moving clones into closures more convenient
-macro_rules! clone {
-    (@param _) => ( _ );
-    (@param $x:ident) => ( $x );
-    ($($n:ident),+ => move || $body:expr) => (
-        {
-            $( let $n = $n.clone(); )+
-            move || $body
-        }
-    );
-    ($($n:ident),+ => move |$($p:tt),+| $body:expr) => (
-        {
-            $( let $n = $n.clone(); )+
-            move |$(clone!(@param $p),)+| $body
-        }
-    );
-}
-
-fn build_ui(application: &gtk::Application) {
-    let vbox = gtk::Box::new(Vertical, 0);
-
-    let plus_button = Button::new_with_label("+");
-    vbox.add(&plus_button);
-    // Set some child properties.
-    // These calls need to be added after the Widget is added to the Box.
-    vbox.set_child_expand(&plus_button, true);
-    vbox.set_child_fill(&plus_button, true);
-    vbox.set_child_padding(&plus_button, 50);
-    vbox.set_child_pack_type(&plus_button, PackType::End);
-
-    let counter_label = Label::new(Some("0"));
-    vbox.add(&counter_label);
-
-    let minus_button = Button::new_with_label("-");
-    vbox.add(&minus_button);
-
-    minus_button.connect_clicked(clone!(counter_label => move |_| {
-        let nb = counter_label.get_text()
-            .and_then(|s| u32::from_str(&s).ok())
-            .unwrap_or(0);
-        if nb > 0 {
-            counter_label.set_text(&format!("{}", nb - 1));
-        }
-    }));
-    plus_button.connect_clicked(clone!(counter_label => move |_| {
-        let nb = counter_label.get_text()
-            .and_then(|s| u32::from_str(&s).ok())
-            .unwrap_or(0);
-        counter_label.set_text(&format!("{}", nb + 1));
-    }));
-
-    let window = ApplicationWindow::new(application);
-
-    window.set_default_size(200, 200);
-    window.add(&vbox);
-
-    window.show_all();
-}
-
-fn main() {
-    let application = gtk::Application::new(
-        Some("com.github.gtk-rs.examples.child_properties"),
-        Default::default(),
-    )
-    .expect("Initialization failed...");
-
-    application.connect_activate(|app| {
-        build_ui(app);
-    });
-
-    application.run(&args().collect::<Vec<_>>());
-}
diff --git a/src/bin/clipboard_simple.rs b/src/bin/clipboard_simple.rs
index 22973d1..72265bd 100644
--- a/src/bin/clipboard_simple.rs
+++ b/src/bin/clipboard_simple.rs
@@ -3,32 +3,16 @@
 //! From https://developer.gnome.org/gtkmm-tutorial/stable/sec-clipboard-examples.html.en
 extern crate gdk;
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use std::cell::RefCell;
 use std::env::args;
 
 use gio::prelude::*;
+use glib::signal::Inhibit;
 use gtk::prelude::*;
 
-// make moving clones into closures more convenient
-macro_rules! clone {
-    (@param _) => ( _ );
-    (@param $x:ident) => ( $x );
-    ($($n:ident),+ => move || $body:expr) => (
-        {
-            $( let $n = $n.clone(); )+
-            move || $body
-        }
-    );
-    ($($n:ident),+ => move |$($p:tt),+| $body:expr) => (
-        {
-            $( let $n = $n.clone(); )+
-            move |$(clone!(@param $p),)+| $body
-        }
-    );
-}
-
 struct Ui {
     pub button_a1: gtk::ToggleButton,
     pub button_a2: gtk::ToggleButton,
@@ -45,11 +29,11 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindow::new(application);
 
     // Create the whole window
-    window.set_title("gtk::Clipboard Simple Example");
-    window.connect_delete_event(clone!(window => move |_, _| {
+    window.set_title("gdk::Clipboard Simple Example");
+    window.connect_close_request(|window| {
         window.destroy();
         Inhibit(false)
-    }));
+    });
 
     // Create the button grid
     let grid = gtk::Grid::new();
@@ -67,10 +51,12 @@ fn build_ui(application: &gtk::Application) {
     // Add in the action buttons
     let copy_button = gtk::Button::new_with_mnemonic("_Copy");
     let paste_button = gtk::Button::new_with_mnemonic("_Paste");
-    let button_box = gtk::ButtonBox::new(gtk::Orientation::Horizontal);
-    button_box.set_layout(gtk::ButtonBoxStyle::End);
-    button_box.pack_start(&copy_button, false, false, 0);
-    button_box.pack_start(&paste_button, false, false, 0);
+    let button_box = gtk::Box::new(gtk::Orientation::Horizontal, 0);
+    copy_button.set_valign(gtk::Align::Center);
+    paste_button.set_valign(gtk::Align::Center);
+    button_box.set_halign(gtk::Align::End);
+    button_box.add(&copy_button);
+    button_box.add(&paste_button);
 
     // Pack widgets into the window and display everything
     let vbox = gtk::Box::new(gtk::Orientation::Vertical, 0);
@@ -80,12 +66,15 @@ fn build_ui(application: &gtk::Application) {
          open a second instance of this example to try \
          pasting the copied data.",
     ));
-    vbox.pack_start(&label, true, true, 0);
-    vbox.pack_start(&grid, true, true, 0);
-    vbox.pack_start(&button_box, true, true, 0);
+    label.set_property_expand(true);
+    grid.set_property_expand(true);
+    button_box.set_property_expand(true);
+    vbox.add(&label);
+    vbox.add(&grid);
+    vbox.add(&button_box);
     window.add(&vbox);
 
-    window.show_all();
+    window.show();
 
     // Save out UI in thread-local storage so we can use it in callbacks later
     GLOBAL.with(move |global| {
@@ -124,14 +113,17 @@ fn build_ui(application: &gtk::Application) {
                 }
             }
         });
-        let clipboard = gtk::Clipboard::get(&gdk::SELECTION_CLIPBOARD);
+        let clipboard = gdk::Display::get_default()
+            .expect("No display")
+            .get_clipboard();
         clipboard.set_text(&s);
     });
     paste_button.connect_clicked(|_| {
-        let clipboard = gtk::Clipboard::get(&gdk::SELECTION_CLIPBOARD);
-        clipboard.request_text(|_, t| {
-            if t.is_some() {
-                let t = t.unwrap();
+        let clipboard = gdk::Display::get_default()
+            .expect("No display")
+            .get_clipboard();
+        clipboard.read_text_async(None::<&gio::Cancellable>, |t| {
+            if let Ok(t) = t {
                 if t.len() >= 4 {
                     GLOBAL.with(|global| {
                         if let Some(ref ui) = *global.borrow() {
diff --git a/src/bin/clock.rs b/src/bin/clock.rs
index 852c678..dc59a11 100644
--- a/src/bin/clock.rs
+++ b/src/bin/clock.rs
@@ -5,6 +5,7 @@
 
 extern crate chrono;
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use chrono::Local;
@@ -20,28 +21,28 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindow::new(application);
 
     window.set_title("First GTK+ Clock");
-    window.set_border_width(10);
     window.set_position(gtk::WindowPosition::Center);
     window.set_default_size(260, 40);
 
     let time = current_time();
     let label = gtk::Label::new(None);
     label.set_text(&time);
+    label.set_property_margin(10);
 
     window.add(&label);
 
-    window.show_all();
+    window.show();
 
     // we are using a closure to capture the label (else we could also use a normal function)
     let tick = move || {
         let time = current_time();
         label.set_text(&time);
         // we could return gtk::Continue(false) to stop our clock after this tick
-        gtk::Continue(true)
+        glib::Continue(true)
     };
 
     // executes the closure once every second
-    gtk::timeout_add_seconds(1, tick);
+    glib::timeout_add_seconds_local(1, tick);
 }
 
 fn main() {
diff --git a/src/bin/css.rs b/src/bin/css.rs
index 04dd5f7..9890db6 100644
--- a/src/bin/css.rs
+++ b/src/bin/css.rs
@@ -15,10 +15,7 @@ use std::env::args;
 // Basic CSS: we change background color, we set font color to black and we set it as bold.
 const STYLE: &str = "
 #entry1 {
-    background-image: -gtk-gradient (linear,
-                                     0 0, 1 0,
-                                     color-stop(0, #f00),
-                                     color-stop(1, #0f0));
+    background: linear-gradient(to right, #f00, #0f0);
     color: blue;
     font-weight: bold;
 }
@@ -55,11 +52,11 @@ fn build_ui(application: &gtk::Application) {
     let label = gtk::Button::new_with_label("hover me!");
     // We need to name it in order to be able to use its name as a CSS label to
     // apply CSS on it.
-    gtk::WidgetExt::set_name(&label, "label1");
+    gtk::WidgetExtManual::set_name(&label, "label1");
 
     let entry = gtk::Entry::new();
     // We need to name it in order to apply CSS on it.
-    gtk::WidgetExt::set_name(&entry, "entry1");
+    gtk::WidgetExtManual::set_name(&entry, "entry1");
     entry.set_text("Some text");
 
     let combo = gtk::ComboBoxText::new();
@@ -75,7 +72,7 @@ fn build_ui(application: &gtk::Application) {
     window.add(&vbox);
 
     application.connect_activate(move |_| {
-        window.show_all();
+        window.show();
     });
 }
 
@@ -86,13 +83,11 @@ fn main() {
     application.connect_startup(|app| {
         // The CSS "magic" happens here.
         let provider = gtk::CssProvider::new();
-        provider
-            .load_from_data(STYLE.as_bytes())
-            .expect("Failed to load CSS");
+        provider.load_from_data(STYLE.as_bytes());
         // We give the CssProvided to the default screen so the CSS rules we added
         // can be applied to our window.
-        gtk::StyleContext::add_provider_for_screen(
-            &gdk::Screen::get_default().expect("Error initializing gtk css provider."),
+        gtk::StyleContext::add_provider_for_display(
+            &gdk::Display::get_default().expect("Error initializing gtk css provider."),
             &provider,
             gtk::STYLE_PROVIDER_PRIORITY_APPLICATION,
         );
diff --git a/src/bin/drag_and_drop.rs b/src/bin/drag_and_drop.rs
index 764e946..2c85125 100644
--- a/src/bin/drag_and_drop.rs
+++ b/src/bin/drag_and_drop.rs
@@ -15,38 +15,41 @@ use std::env::args;
 fn build_ui(application: &gtk::Application) {
     // Configure button as drag source for text
     let button = gtk::Button::new_with_label("Drag here");
-    let targets = vec![
-        gtk::TargetEntry::new("STRING", gtk::TargetFlags::SAME_APP, 0),
-        gtk::TargetEntry::new("text/plain", gtk::TargetFlags::SAME_APP, 0),
-    ];
+    let targets = gdk::ContentFormats::new(&["STRING", "text/plain"]);
     button.drag_source_set(
         gdk::ModifierType::MODIFIER_MASK,
-        &targets,
+        Some(&targets),
         gdk::DragAction::COPY,
     );
-    button.connect_drag_data_get(|_, _, s, _, _| {
+    button.connect_drag_data_get(|_, _, s| {
         let data = "I'm data!";
         s.set_text(data);
     });
+    button.set_property_expand(true);
 
     // Configure label as drag destination to receive text
     let label = gtk::Label::new(Some("Drop here"));
-    label.drag_dest_set(gtk::DestDefaults::ALL, &targets, gdk::DragAction::COPY);
-    label.connect_drag_data_received(|w, _, _, _, s, _, _| {
+    label.drag_dest_set(
+        gtk::DestDefaults::ALL,
+        Some(&targets),
+        gdk::DragAction::COPY,
+    );
+    label.connect_drag_data_received(|w, _, s| {
         w.set_text(&s.get_text().expect("Couldn't get text"));
     });
+    label.set_property_expand(true);
 
     // Stack the button and label horizontally
     let hbox = gtk::Box::new(gtk::Orientation::Horizontal, 0);
-    hbox.pack_start(&button, true, true, 0);
-    hbox.pack_start(&label, true, true, 0);
+    hbox.add(&button);
+    hbox.add(&label);
 
     // Finish populating the window and display everything
     let window = gtk::ApplicationWindow::new(application);
     window.set_title("Simple Drag and Drop Example");
     window.set_default_size(200, 100);
     window.add(&hbox);
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/drag_and_drop_textview.rs b/src/bin/drag_and_drop_textview.rs
index 161bd34..c0f6b12 100644
--- a/src/bin/drag_and_drop_textview.rs
+++ b/src/bin/drag_and_drop_textview.rs
@@ -12,7 +12,7 @@ use std::env::args;
 use gdk::DragAction;
 use gio::prelude::*;
 use gtk::prelude::*;
-use gtk::{DestDefaults, TargetFlags};
+use gtk::DestDefaults;
 use url::Url;
 
 fn build_ui(application: &gtk::Application) {
@@ -29,19 +29,16 @@ fn build_ui(application: &gtk::Application) {
     let scrolled_text_view = gtk::ScrolledWindow::new(gtk::NONE_ADJUSTMENT, gtk::NONE_ADJUSTMENT);
     scrolled_text_view.set_policy(gtk::PolicyType::Automatic, gtk::PolicyType::Automatic);
     scrolled_text_view.add(&text_view);
+    scrolled_text_view.set_property_expand(true);
 
     // Configure the text view to accept URI lists from other applications. This allows
     // dragging files & folders from a file browser program onto the textview.
-    let targets = vec![gtk::TargetEntry::new(
-        "text/uri-list",
-        TargetFlags::OTHER_APP,
-        0,
-    )];
-    text_view.drag_dest_set(DestDefaults::HIGHLIGHT, &targets, DragAction::COPY);
+    let targets = gdk::ContentFormats::new(&["text/uri-list"]);
+    text_view.drag_dest_set(DestDefaults::HIGHLIGHT, Some(&targets), DragAction::COPY);
 
     // Process any `drag-data-received` events received by the textview. These events include
     // the URL list we're looking for.
-    text_view.connect_drag_data_received(|w, _, _, _, d, _, _| {
+    text_view.connect_drag_data_received(|w, _, d| {
         // Get the text buffer for the TextView and clear it to make it ready to accept new text.
         let buffer = w.get_buffer().unwrap();
         buffer.set_text("");
@@ -61,12 +58,12 @@ fn build_ui(application: &gtk::Application) {
 
     // Pack widgets vertically.
     let vbox = gtk::Box::new(gtk::Orientation::Vertical, 0);
-    vbox.pack_start(&label, false, false, 0);
-    vbox.pack_start(&scrolled_text_view, true, true, 0);
+    vbox.add(&label);
+    vbox.add(&scrolled_text_view);
 
     // Create a new window
     window.add(&vbox);
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/entry_completion.rs b/src/bin/entry_completion.rs
old mode 100755
new mode 100644
index f77bc07..b972a3a
--- a/src/bin/entry_completion.rs
+++ b/src/bin/entry_completion.rs
@@ -9,6 +9,7 @@ extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 
 use std::env::args;
@@ -29,7 +30,7 @@ struct Data {
 }
 
 fn create_list_model() -> gtk::ListStore {
-    let col_types: [gtk::Type; 1] = [gtk::Type::String];
+    let col_types: [glib::Type; 1] = [glib::Type::String];
 
     let data: [Data; 4] = [
         Data {
@@ -58,7 +59,6 @@ fn build_ui(application: &gtk::Application) {
     // create the main window
     let window = gtk::ApplicationWindow::new(application);
     window.set_title("Entry with autocompletion");
-    window.set_border_width(5);
     window.set_position(gtk::WindowPosition::Center);
     window.set_default_size(840, 480);
 
@@ -87,13 +87,14 @@ fn build_ui(application: &gtk::Application) {
 
     let row = gtk::Box::new(gtk::Orientation::Vertical, 5);
     row.add(&win_title);
-    row.pack_start(&input_field, false, false, 10);
+    input_field.set_margin_top(10);
+    row.add(&input_field);
 
-    // window.add(&win_title);
+    row.set_property_margin(5);
     window.add(&row);
 
     // show everything
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/gio_futures.rs b/src/bin/gio_futures.rs
deleted file mode 100644
index bd20a19..0000000
--- a/src/bin/gio_futures.rs
+++ /dev/null
@@ -1,130 +0,0 @@
-extern crate futures;
-
-extern crate glib;
-
-extern crate gio;
-use gio::prelude::*;
-
-use std::str;
-
-use futures::prelude::*;
-
-// Throughout our chained futures, we convert all errors to strings
-// via map_err() and print them at the very end.
-//
-// Open the file for reading, and if that succeeds read the whole file from
-// the resulting input stream.
-fn read_and_print_file(
-    file: &gio::File,
-) -> impl Future<Output = Result<(), String>> + std::marker::Unpin {
-    file.read_async_future(glib::PRIORITY_DEFAULT)
-        .map_err(|err| format!("Failed to open file: {}", err))
-        .and_then(|strm| read_and_print_chunks(strm))
-}
-
-// Read the input stream in chunks of 64 bytes, always into the same buffer
-// without re-allocating it all the time. Continue until the end of the file
-// or an error happens.
-fn read_and_print_chunks(
-    strm: gio::FileInputStream,
-) -> impl Future<Output = Result<(), String>> + std::marker::Unpin {
-    let buf = vec![0; 64];
-    let idx = 0;
-
-    // We use unfold() here, which takes some initialization data and a
-    // closure that is returning an item and the next state, or None to
-    // finish the stream
-    futures::stream::unfold(Some((buf, idx)), move |buf_and_idx| {
-        // If None was returned from the last iteration then the last iteration
-        // was closing the input stream or an error happened, and now we only
-        // have to finish the stream created by unfold().
-        //
-        // Otherwise we got the buffer to read to and the index of the next line
-        // from the previous iteration.
-        let (buf, idx) = match buf_and_idx {
-            None => {
-                return futures::future::Either::Left(futures::future::ready(None));
-            }
-            Some(buf_and_idx) => buf_and_idx,
-        };
-
-        // Read and print the next chunk
-        futures::future::Either::Right(read_and_print_next_chunk(&strm, buf, idx).map(move |res| {
-            match res {
-                // And error happened, return the error from this stream and then finish on the
-                // next iteration.
-                Err(err) => Some((Err(err), None)),
-                // The input stream was closed, return Ok(()) from this stream and then finish on
-                // the next iteration.
-                Ok(None) => Some((Ok(()), None)),
-                // A chunk was successfully read and printed, return Ok(()) from this stream and
-                // then continue with the next iteration.
-                Ok(Some(buf)) => Some((Ok(()), Some((buf, idx + 1)))),
-            }
-        }))
-    })
-    // Convert the stream into a simple future that collects all items and
-    // returns Ok(()), or short-circuits on the very first error and returns it
-    .try_for_each(|_| futures::future::ok(()))
-}
-
-// Read the next chunk into the buffer and print it out, or return an error. If
-// the input stream is finished, close the stream.
-//
-// After reading successfully we return the buffer again so it can be used in the
-// next iteration.
-fn read_and_print_next_chunk(
-    strm: &gio::FileInputStream,
-    buf: Vec<u8>,
-    idx: usize,
-) -> impl Future<Output = Result<Option<Vec<u8>>, String>> + std::marker::Unpin {
-    let strm_clone = strm.clone();
-    strm.read_async_future(buf, glib::PRIORITY_DEFAULT)
-        .map_err(|(_buf, err)| format!("Failed to read from stream: {}", err))
-        .and_then(move |(buf, len)| {
-            println!("line {}: {:?}", idx, str::from_utf8(&buf[0..len]).unwrap());
-
-            // 0 is only returned when the input stream is finished, in which case
-            // we drop the buffer and close the stream asynchronously.
-            //
-            // Otherwise we simply return the buffer again so it can be read into
-            // in the next iteration.
-            if len == 0 {
-                futures::future::Either::Left(
-                    strm_clone
-                        .close_async_future(glib::PRIORITY_DEFAULT)
-                        .map_err(|err| format!("Failed to close stream: {}", err))
-                        .map_ok(|_| None),
-                )
-            } else {
-                futures::future::Either::Right(futures::future::ok(Some(buf)))
-            }
-        })
-}
-
-fn main() {
-    let c = glib::MainContext::default();
-    let l = glib::MainLoop::new(Some(&c), false);
-
-    c.push_thread_default();
-
-    let file = gio::File::new_for_path("Cargo.toml");
-
-    let l_clone = l.clone();
-    c.spawn_local(
-        read_and_print_file(&file)
-            // Once all is done we quit the main loop and in case of an
-            // error first print that error.
-            .map(move |res| {
-                if let Err(err) = res {
-                    eprintln!("Got error: {}", err);
-                }
-
-                l_clone.quit();
-            }),
-    );
-
-    l.run();
-
-    c.pop_thread_default();
-}
diff --git a/src/bin/gio_futures_await.rs b/src/bin/gio_futures_await.rs
deleted file mode 100644
index 19016bd..0000000
--- a/src/bin/gio_futures_await.rs
+++ /dev/null
@@ -1,76 +0,0 @@
-#![feature(async_await)]
-
-extern crate gio;
-extern crate glib;
-use gio::prelude::*;
-
-use futures::prelude::*;
-
-use std::str;
-
-// Throughout our chained futures, we convert all errors to strings
-// via map_err() return them directly.
-async fn read_file(file: gio::File) -> Result<(), String> {
-    // Try to open the file.
-    let strm = file
-        .read_async_future(glib::PRIORITY_DEFAULT)
-        .map_err(|err| format!("Failed to open file: {}", err))
-        .await?;
-
-    // If opening the file succeeds, we asynchronously loop and
-    // read the file in up to 64 byte chunks and re-use the same
-    // vec for each read.
-    let mut buf = vec![0; 64];
-    let mut idx = 0;
-
-    loop {
-        let (b, len) = strm
-            .read_async_future(buf, glib::PRIORITY_DEFAULT)
-            .map_err(|(_buf, err)| format!("Failed to read from stream: {}", err))
-            .await?;
-
-        // Once 0 is returned, we know that we're done with reading, otherwise
-        // loop again and read another chunk.
-        if len == 0 {
-            break;
-        }
-
-        buf = b;
-
-        println!("line {}: {:?}", idx, str::from_utf8(&buf[0..len]).unwrap());
-
-        idx += 1;
-    }
-
-    // Asynchronously close the stream in the end.
-    let _ = strm
-        .close_async_future(glib::PRIORITY_DEFAULT)
-        .map_err(|err| format!("Failed to close stream: {}", err))
-        .await?;
-
-    Ok(())
-}
-
-fn main() {
-    let c = glib::MainContext::default();
-    let l = glib::MainLoop::new(Some(&c), false);
-
-    c.push_thread_default();
-
-    let file = gio::File::new_for_path("Cargo.toml");
-
-    let l_clone = l.clone();
-    let future = async move {
-        match read_file(file).await {
-            Ok(()) => (),
-            Err(err) => eprintln!("Got error: {}", err),
-        }
-        l_clone.quit();
-    };
-
-    c.spawn_local(future);
-
-    l.run();
-
-    c.pop_thread_default();
-}
diff --git a/src/bin/grid.glade b/src/bin/grid.glade
index 9070aa2..2083a19 100644
--- a/src/bin/grid.glade
+++ b/src/bin/grid.glade
@@ -1,101 +1,89 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!-- Generated with glade 3.20.0 -->
 <interface>
-  <requires lib="gtk+" version="3.4"/>
   <object class="GtkApplicationWindow" id="window">
-    <property name="can_focus">False</property>
     <property name="title" translatable="yes">Grid example</property>
     <child>
       <object class="GtkGrid" id="grid">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <child>
           <object class="GtkButton" id="button1">
             <property name="label" translatable="yes">Button 1</property>
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
-            <property name="receives_default">True</property>
+            <property name="can_focus">1</property>
+            <property name="receives_default">1</property>
+            <layout>
+              <property name="left_attach">0</property>
+              <property name="top_attach">0</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">0</property>
-            <property name="top_attach">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkButton" id="button2">
             <property name="label" translatable="yes">Button 2</property>
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
-            <property name="receives_default">True</property>
+            <property name="can_focus">1</property>
+            <property name="receives_default">1</property>
+            <layout>
+              <property name="left_attach">1</property>
+              <property name="top_attach">0</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">1</property>
-            <property name="top_attach">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkButton" id="button3">
             <property name="label" translatable="yes">Button 3</property>
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
-            <property name="receives_default">True</property>
+            <property name="can_focus">1</property>
+            <property name="receives_default">1</property>
+            <layout>
+              <property name="left_attach">2</property>
+              <property name="top_attach">0</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">2</property>
-            <property name="top_attach">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkButton" id="button4">
             <property name="label" translatable="yes">Button 4</property>
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
-            <property name="receives_default">True</property>
+            <property name="can_focus">1</property>
+            <property name="receives_default">1</property>
+            <layout>
+              <property name="left_attach">3</property>
+              <property name="top_attach">0</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">3</property>
-            <property name="top_attach">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkButton" id="button5">
             <property name="label" translatable="yes">Button 5</property>
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
-            <property name="receives_default">True</property>
+            <property name="can_focus">1</property>
+            <property name="receives_default">1</property>
+            <layout>
+              <property name="left_attach">0</property>
+              <property name="top_attach">1</property>
+              <property name="column-span">3</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">0</property>
-            <property name="top_attach">1</property>
-            <property name="width">3</property>
-          </packing>
         </child>
         <child>
           <object class="GtkButton" id="button6">
             <property name="label" translatable="yes">Button 6
 Press to resize</property>
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
-            <property name="receives_default">True</property>
+            <property name="can_focus">1</property>
+            <property name="receives_default">1</property>
+            <layout>
+              <property name="left_attach">3</property>
+              <property name="top_attach">1</property>
+              <property name="row-span">2</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">3</property>
-            <property name="top_attach">1</property>
-            <property name="height">2</property>
-          </packing>
         </child>
         <child>
           <object class="GtkButton" id="button7">
             <property name="label" translatable="yes">Button 7
 Press to move</property>
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
-            <property name="receives_default">True</property>
+            <property name="can_focus">1</property>
+            <property name="receives_default">1</property>
+            <layout>
+              <property name="left_attach">0</property>
+              <property name="top_attach">2</property>
+            </layout>
           </object>
-          <packing>
-            <property name="left_attach">0</property>
-            <property name="top_attach">2</property>
-          </packing>
         </child>
         <child>
           <placeholder/>
diff --git a/src/bin/grid.rs b/src/bin/grid.rs
index 734b212..f8b5202 100644
--- a/src/bin/grid.rs
+++ b/src/bin/grid.rs
@@ -1,9 +1,9 @@
-#![cfg_attr(not(feature = "gtk_3_10"), allow(unused_variables, unused_mut))]
-
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 use gtk::{ApplicationWindow, Builder, Button, Grid};
 
@@ -34,20 +34,36 @@ fn build_ui(application: &gtk::Application) {
     let weak_grid = grid.downgrade();
     button6.connect_clicked(move |button| {
         let grid = upgrade_weak!(weak_grid);
-        let height = grid.get_cell_height(button);
+        let layout_manager = grid
+            .get_layout_manager()
+            .expect("Couldn't get layout manager");
+        let layout_child = layout_manager
+            .get_layout_child(button)
+            .expect("Couldn't get layout child")
+            .dynamic_cast::<gtk::GridLayoutChild>()
+            .expect("Couldn't downcast to GridLayoutChild");
+        let height = layout_child.get_row_span();
         let new_height = if height == 2 { 1 } else { 2 };
-        grid.set_cell_height(button, new_height);
+        layout_child.set_row_span(new_height);
     });
     let button7: Button = builder.get_object("button7").expect("Couldn't get button7");
     let weak_grid = grid.downgrade();
     button7.connect_clicked(move |button| {
         let grid = upgrade_weak!(weak_grid);
-        let left_attach = grid.get_cell_left_attach(button);
+        let layout_manager = grid
+            .get_layout_manager()
+            .expect("Couldn't get layout manager");
+        let layout_child = layout_manager
+            .get_layout_child(button)
+            .expect("Couldn't get layout child")
+            .dynamic_cast::<gtk::GridLayoutChild>()
+            .expect("Couldn't downcast to GridLayoutChild");
+        let left_attach = layout_child.get_left_attach();
         let new_left_attach = if left_attach == 2 { 0 } else { left_attach + 1 };
-        grid.set_cell_left_attach(button, new_left_attach);
+        layout_child.set_left_attach(new_left_attach);
     });
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/gtktest.glade b/src/bin/gtktest.glade
index 43e4521..cfc55ad 100644
--- a/src/bin/gtktest.glade
+++ b/src/bin/gtktest.glade
@@ -1,7 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!-- Generated with glade 3.16.1 -->
 <interface>
-  <requires lib="gtk+" version="3.10"/>
   <object class="GtkAdjustment" id="scale_adjustment">
     <property name="upper">100</property>
     <property name="step_increment">1</property>
@@ -13,7 +11,6 @@
     <property name="page_increment">10</property>
   </object>
   <object class="GtkAboutDialog" id="dialog">
-    <property name="can_focus">False</property>
     <property name="type_hint">dialog</property>
     <property name="program_name">Glade</property>
     <property name="website">http://gtk-rs.org</property>
@@ -21,22 +18,13 @@
 Spock
 Leonard McCoy</property>
     <property name="artists">James T. Kirk</property>
-    <child internal-child="vbox">
+    <child internal-child="action_area">
       <object class="GtkBox" id="aboutdialog-vbox1">
-        <property name="can_focus">False</property>
         <property name="orientation">vertical</property>
         <property name="spacing">2</property>
         <child internal-child="action_area">
-          <object class="GtkButtonBox" id="aboutdialog-action_area1">
-            <property name="can_focus">False</property>
-            <property name="layout_style">end</property>
+          <object class="GtkBox" id="aboutdialog-action_area1">
           </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="pack_type">end</property>
-            <property name="position">0</property>
-          </packing>
         </child>
         <child>
           <placeholder/>
@@ -45,504 +33,258 @@ Leonard McCoy</property>
     </child>
   </object>
   <object class="GtkImage" id="image2">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
     <property name="icon_name">edit-clear</property>
   </object>
   <object class="GtkApplicationWindow" id="window">
-    <property name="can_focus">False</property>
     <property name="title" translatable="yes">Yeah a beautiful window with gtk !</property>
     <property name="window_position">center</property>
     <child>
       <object class="GtkFrame" id="frame">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
-        <property name="border_width">10</property>
-        <property name="label_xalign">0</property>
         <property name="shadow_type">none</property>
+        <property name="margin">10</property>
         <child>
-          <object class="GtkAlignment" id="alignment1">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="left_padding">12</property>
+          <object class="GtkBox" id="_box">
+            <property name="orientation">vertical</property>
+            <property name="spacing">10</property>
+            <property name="margin_start">17</property>
+            <property name="margin_end">5</property>
+            <property name="margin_top">5</property>
+            <property name="margin_bottom">5</property>
             <child>
-              <object class="GtkBox" id="_box">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="border_width">5</property>
-                <property name="orientation">vertical</property>
-                <property name="spacing">10</property>
-                <child>
-                  <object class="GtkInfoBar" id="info_bar">
-                    <property name="visible">True</property>
-                    <property name="app_paintable">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="show_close_button">True</property>
-                    <child internal-child="action_area">
-                      <object class="GtkButtonBox" id="infobar-action_area1">
-                        <property name="can_focus">False</property>
-                        <property name="spacing">6</property>
-                        <property name="layout_style">end</property>
-                        <child>
-                          <placeholder/>
-                        </child>
-                        <child>
-                          <placeholder/>
-                        </child>
-                        <child>
-                          <placeholder/>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">False</property>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child internal-child="content_area">
-                      <object class="GtkBox" id="infobar-content_area1">
-                        <property name="can_focus">False</property>
-                        <property name="spacing">16</property>
-                        <child>
-                          <placeholder/>
-                        </child>
-                        <child>
-                          <placeholder/>
-                        </child>
-                        <child>
-                          <placeholder/>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">False</property>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
+              <object class="GtkInfoBar" id="info_bar">
+                <property name="show_close_button">1</property>
+                <child internal-child="action_area">
+                  <object class="GtkBox" id="infobar-action_area1">
+                    <property name="spacing">6</property>
                     <child>
                       <placeholder/>
                     </child>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkBox" id="v_box">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="spacing">10</property>
                     <child>
-                      <object class="GtkSwitch" id="switch">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">0</property>
-                      </packing>
+                      <placeholder/>
                     </child>
                     <child>
-                      <object class="GtkSwitch" id="switch2">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="active">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">1</property>
-                      </packing>
+                      <placeholder/>
                     </child>
+                  </object>
+                </child>
+                <child internal-child="content_area">
+                  <object class="GtkBox" id="infobar-content_area1">
+                    <property name="spacing">16</property>
                     <child>
-                      <object class="GtkCheckButton" id="check_button">
-                        <property name="label" translatable="yes">checkbutton</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">False</property>
-                        <property name="xalign">0</property>
-                        <property name="draw_indicator">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">2</property>
-                      </packing>
+                      <placeholder/>
                     </child>
                     <child>
-                      <object class="GtkLinkButton" id="link_button">
-                        <property name="label" translatable="yes">rust-lang.org</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="relief">none</property>
-                        <property name="uri">https://www.rust-lang.org/</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">3</property>
-                      </packing>
+                      <placeholder/>
                     </child>
                     <child>
-                      <object class="GtkSpinButton" id="spin_button">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="adjustment">spin_adjustment</property>
-                        <property name="digits">1</property>
-                        <property name="update_policy">if-valid</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">4</property>
-                      </packing>
+                      <placeholder/>
                     </child>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">1</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkScale" id="scale">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="adjustment">scale_adjustment</property>
-                    <property name="round_digits">1</property>
+                  <placeholder/>
+                </child>
+              </object>
+            </child>
+            <child>
+              <object class="GtkBox" id="v_box">
+                <property name="spacing">10</property>
+                <child>
+                  <object class="GtkSwitch" id="switch">
+                    <property name="can_focus">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">2</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkLevelBar" id="level_bar">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="value">37</property>
-                    <property name="max_value">100</property>
+                  <object class="GtkSwitch" id="switch2">
+                    <property name="can_focus">1</property>
+                    <property name="active">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">3</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkButtonBox" id="button_box">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="layout_style">start</property>
-                    <child>
-                      <object class="GtkButton" id="tmp_button">
-                        <property name="label" translatable="yes">button</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="image">image2</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkButton" id="button">
-                        <property name="label" translatable="yes">Whattttt a button !</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkButton" id="button_about">
-                        <property name="label" translatable="yes">About?</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">2</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkButton" id="button_font">
-                        <property name="label" translatable="yes">Choose a font!</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">3</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkButton" id="button_recent">
-                        <property name="label" translatable="yes">Choose a recent one !</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">4</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkButton" id="file_button">
-                        <property name="label" translatable="yes">file ?</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">5</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkButton" id="app_button">
-                        <property name="label" translatable="yes">App ?</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="yalign">0.50999999046325684</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">6</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkFontButton" id="font_button">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="font">Sans 12</property>
-                        <property name="preview_text"/>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">7</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkToggleButton" id="toggle_button">
-                        <property name="label" translatable="yes">Toggle Me !</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">8</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkColorButton" id="color_button">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">9</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkVolumeButton" id="volume_button">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">True</property>
-                        <property name="relief">none</property>
-                        <property name="focus_on_click">False</property>
-                        <property name="icons">audio-volume-muted
-audio-volume-high
-audio-volume-low
-audio-volume-medium</property>
-                        <child internal-child="plus_button">
-                          <object class="GtkButton" id="volumebutton-plus_button1">
-                            <property name="label" translatable="yes">+</property>
-                            <property name="can_focus">True</property>
-                            <property name="receives_default">True</property>
-                            <property name="relief">none</property>
-                          </object>
-                        </child>
-                        <child internal-child="minus_button">
-                          <object class="GtkButton" id="volumebutton-minus_button1">
-                            <property name="label" translatable="yes">-</property>
-                            <property name="can_focus">True</property>
-                            <property name="receives_default">True</property>
-                            <property name="relief">none</property>
-                          </object>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">10</property>
-                      </packing>
-                    </child>
+                  <object class="GtkCheckButton" id="check_button">
+                    <property name="label" translatable="yes">checkbutton</property>
+                    <property name="can_focus">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">4</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkProgressBar" id="progress_bar">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="fraction">0.69999999999999996</property>
+                  <object class="GtkLinkButton" id="link_button">
+                    <property name="label" translatable="yes">rust-lang.org</property>
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
+                    <property name="relief">none</property>
+                    <property name="uri">https://www.rust-lang.org/</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">5</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkSeparator" id="separator">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
+                  <object class="GtkSpinButton" id="spin_button">
+                    <property name="adjustment">spin_adjustment</property>
+                    <property name="digits">1</property>
+                    <property name="update_policy">if-valid</property>
+                  </object>
+                </child>
+              </object>
+            </child>
+            <child>
+              <object class="GtkScale" id="scale">
+                <property name="can_focus">1</property>
+                <property name="adjustment">scale_adjustment</property>
+                <property name="round_digits">1</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkLevelBar" id="level_bar">
+                <property name="value">37</property>
+                <property name="max_value">100</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkBox" id="button_box">
+                <property name="homogeneous">1</property>
+                <child>
+                  <object class="GtkButton" id="tmp_button">
+                    <property name="label" translatable="yes">button</property>
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkButton" id="button">
+                    <property name="label" translatable="yes">Whattttt a button !</property>
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">6</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkLabel" id="label">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="label" translatable="yes">Yeah a wonderful label too !</property>
+                  <object class="GtkButton" id="button_about">
+                    <property name="label" translatable="yes">About?</property>
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">7</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkEntry" id="entry">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="placeholder_text" translatable="yes">An entry with a placeholder !</property>
+                  <object class="GtkButton" id="button_font">
+                    <property name="label" translatable="yes">Choose a font!</property>
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">8</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkSeparator" id="separator2">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
+                  <object class="GtkButton" id="file_button">
+                    <property name="label" translatable="yes">file ?</property>
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">9</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkSearchEntry" id="search_entry">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="primary_icon_name">edit-find-symbolic</property>
-                    <property name="primary_icon_activatable">False</property>
-                    <property name="primary_icon_sensitive">False</property>
-                    <property name="placeholder_text" translatable="yes">An Entry with a placeholder !</property>
+                  <object class="GtkButton" id="app_button">
+                    <property name="label" translatable="yes">App ?</property>
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">10</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkSpinner" id="spinner">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="active">False</property>
+                  <object class="GtkFontButton" id="font_button">
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
+                    <property name="font">Sans 12</property>
+                    <property name="preview_text"></property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">11</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkImage" id="image">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="pixbuf">resources/eye.png</property>
+                  <object class="GtkToggleButton" id="toggle_button">
+                    <property name="label" translatable="yes">Toggle Me !</property>
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">12</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkArrow" id="arrow">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="shadow_type">etched-out</property>
+                  <object class="GtkColorButton" id="color_button">
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">13</property>
-                  </packing>
                 </child>
                 <child>
-                  <object class="GtkCalendar" id="calendar1">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="year">2016</property>
-                    <property name="month">4</property>
-                    <property name="day">5</property>
+                  <object class="GtkVolumeButton" id="volume_button">
+                    <property name="can_focus">1</property>
+                    <property name="receives_default">1</property>
+                    <property name="relief">none</property>
+                    <property name="focus_on_click">0</property>
+                    <property name="icons">audio-volume-muted
+audio-volume-high
+audio-volume-low
+audio-volume-medium</property>
+                    <child internal-child="plus_button">
+                      <object class="GtkButton" id="volumebutton-plus_button1">
+                        <property name="label" translatable="yes">+</property>
+                        <property name="can_focus">1</property>
+                        <property name="receives_default">1</property>
+                        <property name="relief">none</property>
+                      </object>
+                    </child>
+                    <child internal-child="minus_button">
+                      <object class="GtkButton" id="volumebutton-minus_button1">
+                        <property name="label" translatable="yes">-</property>
+                        <property name="can_focus">1</property>
+                        <property name="receives_default">1</property>
+                        <property name="relief">none</property>
+                      </object>
+                    </child>
                   </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">14</property>
-                  </packing>
                 </child>
               </object>
             </child>
+            <child>
+              <object class="GtkProgressBar" id="progress_bar">
+                <property name="fraction">0.69999999999999996</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkSeparator" id="separator"/>
+            </child>
+            <child>
+              <object class="GtkLabel" id="label">
+                <property name="label" translatable="yes">Yeah a wonderful label too !</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkEntry" id="entry">
+                <property name="placeholder_text" translatable="yes">An entry with a placeholder !</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkSeparator" id="separator2"/>
+            </child>
+            <child>
+              <object class="GtkSearchEntry" id="search_entry">
+                <property name="placeholder_text" translatable="yes">An Entry with a placeholder !</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkSpinner" id="spinner"/>
+            </child>
+            <child>
+              <object class="GtkImage" id="image">
+                <property name="file">resources/eye.png</property>
+                <property name="pixel_size">64</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkImage" id="arrow">
+                <property name="icon_name">go-next-symbolic</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkCalendar" id="calendar1">
+                <property name="can_focus">1</property>
+                <property name="year">2016</property>
+                <property name="month">4</property>
+                <property name="day">5</property>
+              </object>
+            </child>
           </object>
         </child>
         <child type="label">
           <object class="GtkLabel" id="label1">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <property name="label" translatable="yes">frame1</property>
           </object>
         </child>
diff --git a/src/bin/gtktest.rs b/src/bin/gtktest.rs
index 81320d7..e51fd4a 100644
--- a/src/bin/gtktest.rs
+++ b/src/bin/gtktest.rs
@@ -6,11 +6,13 @@ extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
+use glib::signal::Inhibit;
 use gtk::prelude::*;
 use gtk::{
     AboutDialog, AppChooserDialog, ApplicationWindow, Builder, Button, Dialog, Entry,
-    FileChooserAction, FileChooserDialog, FontChooserDialog, RecentChooserDialog, ResponseType,
-    Scale, SpinButton, Spinner, Switch, Window,
+    FileChooserAction, FileChooserDialog, FontChooserDialog, ResponseType, Scale, SpinButton,
+    Spinner, Switch, Window,
 };
 
 use std::env::args;
@@ -144,22 +146,6 @@ fn build_ui(application: &gtk::Application) {
         dialog.destroy();
     }));
 
-    let button_recent: Button = builder
-        .get_object("button_recent")
-        .expect("Couldn't get button_recent");
-    button_recent.connect_clicked(clone!(window_weak => move |_| {
-        let window = upgrade_weak!(window_weak);
-
-        let dialog = RecentChooserDialog::new(Some("Recent chooser test"), Some(&window));
-        dialog.add_buttons(&[
-            ("Ok", ResponseType::Ok),
-            ("Cancel", ResponseType::Cancel)
-        ]);
-
-        dialog.run();
-        dialog.destroy();
-    }));
-
     let file_button: Button = builder
         .get_object("file_button")
         .expect("Couldn't get file_button");
@@ -168,7 +154,7 @@ fn build_ui(application: &gtk::Application) {
 
         //entry.set_text("Clicked!");
         let dialog = FileChooserDialog::new(Some("Choose a file"), Some(&window),
-                                            FileChooserAction::Open);
+                                            FileChooserAction::Open, &[]);
         dialog.add_buttons(&[
             ("Open", ResponseType::Ok),
             ("Cancel", ResponseType::Cancel)
@@ -198,7 +184,7 @@ fn build_ui(application: &gtk::Application) {
     }));
 
     let switch: Switch = builder.get_object("switch").expect("Couldn't get switch");
-    switch.connect_changed_active(clone!(entry_weak => move |switch| {
+    switch.connect_property_active_notify(clone!(entry_weak => move |switch| {
         let entry = upgrade_weak!(entry_weak);
 
         if switch.get_active() {
@@ -214,12 +200,12 @@ fn build_ui(application: &gtk::Application) {
     let dialog: AboutDialog = builder.get_object("dialog").expect("Couldn't get dialog");
     button_about.connect_clicked(move |x| about_clicked(x, &dialog));
 
-    window.connect_key_press_event(clone!(entry_weak => move |_, key| {
+    let event = gtk::EventControllerKey::new();
+    window.add_controller(&event);
+    event.set_propagation_phase(gtk::PropagationPhase::Capture);
+    event.connect_key_pressed(clone!(entry_weak => move |_, keyval, _, keystate| {
         let entry = upgrade_weak!(entry_weak, Inhibit(false));
 
-        let keyval = key.get_keyval();
-        let keystate = key.get_state();
-
         println!("key pressed: {} / {:?}", keyval, keystate);
         println!("text: {}", entry.get_text().expect("Couldn't get text from entry"));
 
@@ -230,7 +216,7 @@ fn build_ui(application: &gtk::Application) {
         Inhibit(false)
     }));
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/list_store.rs b/src/bin/list_store.rs
index ecfb184..bb84c48 100644
--- a/src/bin/list_store.rs
+++ b/src/bin/list_store.rs
@@ -1,7 +1,9 @@
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 
 use std::env::args;
@@ -24,11 +26,11 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindow::new(application);
 
     window.set_title("List Store");
-    window.set_border_width(10);
     window.set_position(gtk::WindowPosition::Center);
     window.set_default_size(280, 250);
 
     let vbox = gtk::Box::new(gtk::Orientation::Vertical, 8);
+    vbox.set_property_margin(10);
     window.add(&vbox);
 
     let label = gtk::Label::new(Some(
@@ -51,10 +53,10 @@ fn build_ui(application: &gtk::Application) {
 
     add_columns(&model, &treeview);
 
-    window.show_all();
+    window.show();
 
     let model = model.clone();
-    timeout_add(80, move || spinner_timeout(&model));
+    glib::timeout_add_local(80, move || spinner_timeout(&model));
 }
 
 struct Data {
@@ -65,15 +67,15 @@ struct Data {
 }
 
 fn create_model() -> gtk::ListStore {
-    let col_types: [gtk::Type; 8] = [
-        gtk::Type::Bool,
-        gtk::Type::U32,
-        gtk::Type::String,
-        gtk::Type::String,
-        gtk::Type::U32,
-        gtk::Type::String,
-        gtk::Type::Bool,
-        gtk::Type::Bool,
+    let col_types: [glib::Type; 8] = [
+        glib::Type::Bool,
+        glib::Type::U32,
+        glib::Type::String,
+        glib::Type::String,
+        glib::Type::U32,
+        glib::Type::String,
+        glib::Type::Bool,
+        glib::Type::Bool,
     ];
 
     let data: [Data; 14] = [
diff --git a/src/bin/listbox_model.rs b/src/bin/listbox_model.rs
index fca4fa2..fbeab07 100644
--- a/src/bin/listbox_model.rs
+++ b/src/bin/listbox_model.rs
@@ -16,6 +16,7 @@ extern crate gio;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 
 use gtk::ResponseType;
@@ -60,7 +61,6 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindow::new(application);
 
     window.set_title("ListBox Model Sample");
-    window.set_border_width(10);
     window.set_position(gtk::WindowPosition::Center);
     window.set_default_size(320, 480);
 
@@ -80,7 +80,7 @@ fn build_ui(application: &gtk::Application) {
     //
     // The gtk::ListBoxRow can contain any possible widgets.
     let listbox = gtk::ListBox::new();
-    listbox.bind_model(Some(&model), clone!(window_weak => move |item| {
+    listbox.bind_model(Some(&model), Some(Box::new(clone!(window_weak => move |item| {
         let box_ = gtk::ListBoxRow::new();
         let item = item.downcast_ref::<RowData>().expect("Row data is of wrong type");
 
@@ -99,13 +99,14 @@ fn build_ui(application: &gtk::Application) {
         item.bind_property("name", &label, "label")
             .flags(glib::BindingFlags::DEFAULT | glib::BindingFlags::SYNC_CREATE)
             .build();
-        hbox.pack_start(&label, true, true, 0);
+        label.set_property_expand(true);
+        hbox.add(&label);
 
         let spin_button = gtk::SpinButton::new_with_range(0.0, 100.0, 1.0);
         item.bind_property("count", &spin_button, "value")
             .flags(glib::BindingFlags::DEFAULT | glib::BindingFlags::SYNC_CREATE | glib::BindingFlags::BIDIRECTIONAL)
             .build();
-        hbox.pack_start(&spin_button, false, false, 0);
+        hbox.add(&spin_button);
 
         // When the edit button is clicked, a new modal dialog is created for editing
         // the corresponding row
@@ -143,9 +144,9 @@ fn build_ui(application: &gtk::Application) {
                 .build();
             content_area.add(&spin_button);
 
-            dialog.show_all();
+            dialog.show();
         }));
-        hbox.pack_start(&edit_button, false, false, 0);
+        hbox.add(&edit_button);
 
         box_.add(&hbox);
 
@@ -157,10 +158,8 @@ fn build_ui(application: &gtk::Application) {
             edit_button.emit_clicked();
         });
 
-        box_.show_all();
-
         box_.upcast::<gtk::Widget>()
-    }));
+    }))));
 
     let scrolled_window = gtk::ScrolledWindow::new(gtk::NONE_ADJUSTMENT, gtk::NONE_ADJUSTMENT);
     scrolled_window.add(&listbox);
@@ -202,7 +201,7 @@ fn build_ui(application: &gtk::Application) {
                 dialog.destroy();
             }));
 
-            dialog.show_all();
+            dialog.show();
     }));
 
     hbox.add(&add_button);
@@ -221,8 +220,11 @@ fn build_ui(application: &gtk::Application) {
     }));
     hbox.add(&delete_button);
 
-    vbox.pack_start(&hbox, false, false, 0);
-    vbox.pack_start(&scrolled_window, true, true, 0);
+    vbox.add(&hbox);
+    scrolled_window.set_property_expand(true);
+    vbox.add(&scrolled_window);
+
+    vbox.set_property_margin(10);
 
     window.add(&vbox);
 
@@ -230,7 +232,7 @@ fn build_ui(application: &gtk::Application) {
         model.append(&RowData::new(&format!("Name {}", i), i * 10));
     }
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/menu_bar.rs b/src/bin/menu_bar.rs
index cb0a9fc..40bd3e1 100644
--- a/src/bin/menu_bar.rs
+++ b/src/bin/menu_bar.rs
@@ -5,13 +5,15 @@
 //! /!\ This is different from the system menu bar (which are preferred) available in `gio::Menu`!
 
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 use gtk::{
-    AboutDialog, AccelFlags, AccelGroup, ApplicationWindow, CheckMenuItem, IconSize, Image, Label,
-    Menu, MenuBar, MenuItem, WindowPosition,
+    AboutDialog, AccelFlags, AccelGroup, ApplicationWindow, CheckMenuItem, Image, Label, Menu,
+    MenuBar, MenuItem, WindowPosition,
 };
 
 use std::env::args;
@@ -47,20 +49,20 @@ fn build_ui(application: &gtk::Application) {
     let about = MenuItem::new_with_label("About");
     let quit = MenuItem::new_with_label("Quit");
     let file_item = MenuItem::new();
-    let file_box = gtk::Box::new(gtk::Orientation::Horizontal, 0);
+    let file_box = gtk::Box::new(gtk::Orientation::Horizontal, 6);
     let file_image = Image::new_from_file("resources/file.png");
     let file_label = Label::new(Some("File"));
     let folder_item = MenuItem::new();
-    let folder_box = gtk::Box::new(gtk::Orientation::Horizontal, 0);
-    let folder_image = Image::new_from_icon_name(Some("folder-music-symbolic"), IconSize::Menu);
+    let folder_box = gtk::Box::new(gtk::Orientation::Horizontal, 6);
+    let folder_image = Image::new_from_icon_name(Some("folder-music-symbolic"));
     let folder_label = Label::new(Some("Folder"));
     let check_item = CheckMenuItem::new_with_label("Click me!");
 
-    file_box.pack_start(&file_image, false, false, 0);
-    file_box.pack_start(&file_label, true, true, 0);
+    file_box.add(&file_image);
+    file_box.add(&file_label);
     file_item.add(&file_box);
-    folder_box.pack_start(&folder_image, false, false, 0);
-    folder_box.pack_start(&folder_label, true, true, 0);
+    folder_box.add(&folder_image);
+    folder_box.add(&folder_label);
     folder_item.add(&folder_box);
     menu.append(&file_item);
     menu.append(&folder_item);
@@ -99,16 +101,17 @@ fn build_ui(application: &gtk::Application) {
     quit.add_accelerator("activate", &accel_group, key, modifier, AccelFlags::VISIBLE);
 
     let label = Label::new(Some("MenuBar example"));
+    label.set_property_expand(true);
 
-    v_box.pack_start(&menu_bar, false, false, 0);
-    v_box.pack_start(&label, true, true, 0);
+    v_box.add(&menu_bar);
+    v_box.add(&label);
     window.add(&v_box);
-    window.show_all();
+    window.show();
 
     about.connect_activate(move |_| {
         let p = AboutDialog::new();
         p.set_authors(&["gtk-rs developers"]);
-        p.set_website_label(Some("gtk-rs"));
+        p.set_website_label("gtk-rs");
         p.set_website(Some("http://gtk-rs.org"));
         p.set_authors(&["Gtk-rs developers"]);
         p.set_title("About!");
diff --git a/src/bin/menu_bar_system.rs b/src/bin/menu_bar_system.rs
index 2982963..fd529b3 100644
--- a/src/bin/menu_bar_system.rs
+++ b/src/bin/menu_bar_system.rs
@@ -4,11 +4,13 @@
 //! over the `gtk::MenuBar` since it adapts to the targetted system.
 
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
-use gtk::{AboutDialog, ToVariant};
+use gtk::AboutDialog;
 
 use std::env::args;
 
@@ -106,7 +108,7 @@ fn add_actions(
     about.connect_activate(clone!(window => move |_, _| {
         let p = AboutDialog::new();
         p.set_authors(&["gtk-rs developers"]);
-        p.set_website_label(Some("gtk-rs"));
+        p.set_website_label("gtk-rs");
         p.set_website(Some("http://gtk-rs.org"));
         p.set_authors(&["Gtk-rs developers"]);
         p.set_title("About!");
@@ -136,23 +138,24 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindow::new(application);
 
     window.set_title("System menu bar");
-    window.set_border_width(10);
     window.set_position(gtk::WindowPosition::Center);
     window.set_default_size(350, 70);
 
     let v_box = gtk::Box::new(gtk::Orientation::Vertical, 10);
     let label = gtk::Label::new(Some("Nothing happened yet"));
     let switch = gtk::Switch::new();
+    switch.set_property_expand(true);
 
-    v_box.pack_start(&label, false, false, 0);
-    v_box.pack_start(&switch, true, true, 0);
+    v_box.add(&label);
+    v_box.add(&switch);
+    v_box.set_property_margin(10);
     window.add(&v_box);
 
     build_system_menu(application);
 
     add_actions(application, &switch, &label, &window);
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/multi_windows.rs b/src/bin/multi_windows.rs
index 4aa3e43..71ae175 100644
--- a/src/bin/multi_windows.rs
+++ b/src/bin/multi_windows.rs
@@ -3,6 +3,8 @@ extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
+use glib::signal::Inhibit;
 use gtk::prelude::*;
 
 use std::cell::RefCell;
@@ -56,7 +58,7 @@ fn create_sub_window(
     window.set_title(title);
     window.set_default_size(400, 200);
 
-    window.connect_delete_event(clone!(windows => move |_, _| {
+    window.connect_close_request(clone!(windows => move |_| {
         windows.borrow_mut().remove(&id);
         Inhibit(false)
     }));
@@ -68,7 +70,7 @@ fn create_sub_window(
     }));
     window.add(&button);
 
-    window.show_all();
+    window.show();
     // Once the new window has been created, we put it into our hashmap so we can update its
     // title when needed.
     windows.borrow_mut().insert(id, window.downgrade());
@@ -81,7 +83,7 @@ fn create_main_window(application: &gtk::Application) -> gtk::ApplicationWindow
     window.set_default_size(400, 200);
     window.set_position(gtk::WindowPosition::Center);
 
-    window.show_all();
+    window.show();
     window
 }
 
@@ -139,7 +141,7 @@ fn build_ui(application: &gtk::Application) {
     window.set_focus(Some(&button));
 
     // Then we show everything.
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/multithreading_context.rs b/src/bin/multithreading_context.rs
index d030852..feb9edb 100644
--- a/src/bin/multithreading_context.rs
+++ b/src/bin/multithreading_context.rs
@@ -13,7 +13,6 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindow::new(application);
 
     window.set_title("Multithreading GTK+ Program");
-    window.set_border_width(10);
     window.set_position(gtk::WindowPosition::Center);
     window.set_default_size(600, 400);
 
@@ -22,6 +21,8 @@ fn build_ui(application: &gtk::Application) {
     scroll.set_policy(gtk::PolicyType::Automatic, gtk::PolicyType::Automatic);
     scroll.add(&text_view);
 
+    scroll.set_property_margin(10);
+
     let (tx, rx) = glib::MainContext::channel(glib::PRIORITY_DEFAULT);
 
     thread::spawn(move || {
@@ -46,7 +47,7 @@ fn build_ui(application: &gtk::Application) {
     });
 
     window.add(&scroll);
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/notebook.rs b/src/bin/notebook.rs
index c7b6566..ce82239 100644
--- a/src/bin/notebook.rs
+++ b/src/bin/notebook.rs
@@ -1,9 +1,11 @@
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
-use gtk::{IconSize, Orientation, ReliefStyle, Widget};
+use gtk::{Orientation, ReliefStyle, Widget};
 
 use std::env::args;
 
@@ -35,7 +37,7 @@ impl Notebook {
     }
 
     fn create_tab(&mut self, title: &str, widget: Widget) -> u32 {
-        let close_image = gtk::Image::new_from_icon_name(Some("window-close"), IconSize::Button);
+        let close_image = gtk::Image::new_from_icon_name(Some("window-close"));
         let button = gtk::Button::new();
         let label = gtk::Label::new(Some(title));
         let tab = gtk::Box::new(Orientation::Horizontal, 0);
@@ -44,9 +46,8 @@ impl Notebook {
         button.set_focus_on_click(false);
         button.add(&close_image);
 
-        tab.pack_start(&label, false, false, 0);
-        tab.pack_start(&button, false, false, 0);
-        tab.show_all();
+        tab.add(&label);
+        tab.add(&button);
 
         let index = self.notebook.append_page(&widget, Some(&tab));
 
@@ -81,7 +82,7 @@ fn build_ui(application: &gtk::Application) {
     }
 
     window.add(&notebook.notebook);
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/overlay.rs b/src/bin/overlay.rs
index e4911af..348078f 100644
--- a/src/bin/overlay.rs
+++ b/src/bin/overlay.rs
@@ -8,6 +8,7 @@ extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 
 use std::env::args;
@@ -51,7 +52,7 @@ fn build_ui(application: &gtk::Application) {
     // The overlay label.
     let overlay_text = gtk::Label::new(Some("0"));
     // We need to name it in order to apply CSS on it.
-    gtk::WidgetExt::set_name(&overlay_text, "overlay-label");
+    gtk::WidgetExtManual::set_name(&overlay_text, "overlay-label");
     // We put the overlay in the top-right corner of the window.
     overlay_text.set_halign(gtk::Align::End);
     overlay_text.set_valign(gtk::Align::Start);
@@ -89,7 +90,7 @@ fn build_ui(application: &gtk::Application) {
     // Then we add the overlay container inside our window.
     window.add(&overlay);
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
@@ -100,11 +101,9 @@ fn main() {
     application.connect_startup(|_| {
         // We add a bit of CSS in order to make the overlay label easier to be seen.
         let provider = gtk::CssProvider::new();
-        provider
-            .load_from_data(STYLE.as_bytes())
-            .expect("Failed to load CSS");
-        gtk::StyleContext::add_provider_for_screen(
-            &gdk::Screen::get_default().expect("Error initializing gtk css provider."),
+        provider.load_from_data(STYLE.as_bytes());
+        gtk::StyleContext::add_provider_for_display(
+            &gdk::Display::get_default().expect("Error initializing gtk css provider."),
             &provider,
             gtk::STYLE_PROVIDER_PRIORITY_APPLICATION,
         );
diff --git a/src/bin/pango_attributes.rs b/src/bin/pango_attributes.rs
index 0c767b1..aa260f3 100644
--- a/src/bin/pango_attributes.rs
+++ b/src/bin/pango_attributes.rs
@@ -15,7 +15,6 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindow::new(application);
 
     window.set_title("Pango text attributes");
-    window.set_border_width(10);
     window.set_position(gtk::WindowPosition::Center);
     window.set_default_size(350, 70);
 
@@ -44,9 +43,11 @@ fn build_ui(application: &gtk::Application) {
     attr_list.insert(attr);
 
     label.set_attributes(Some(&attr_list));
+
+    label.set_property_margin(10);
     window.add(&label);
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/progress_tracker.rs b/src/bin/progress_tracker.rs
index 7f3d232..055763d 100644
--- a/src/bin/progress_tracker.rs
+++ b/src/bin/progress_tracker.rs
@@ -7,6 +7,7 @@ extern crate gtk;
 use gio::prelude::*;
 use gtk::prelude::*;
 
+use gio::signal::Inhibit;
 use std::cell::{Cell, RefCell};
 use std::env::args;
 use std::rc::Rc;
@@ -104,12 +105,12 @@ impl Application {
                             .set_visible_child(&widgets.complete_view.container);
 
                         let widgets = widgets.clone();
-                        gtk::timeout_add(1500, move || {
+                        glib::timeout_add_local(1500, move || {
                             widgets.main_view.progress.set_fraction(0.0);
                             widgets
                                 .view_stack
                                 .set_visible_child(&widgets.main_view.container);
-                            gtk::Continue(false)
+                            glib::Continue(false)
                         });
                     }
 
@@ -138,7 +139,7 @@ impl Widgets {
         let main_view = MainView::new();
 
         let view_stack = gtk::Stack::new();
-        view_stack.set_border_width(6);
+        view_stack.set_property_margin(6);
         view_stack.set_vexpand(true);
         view_stack.set_hexpand(true);
         view_stack.add(&main_view.container);
@@ -151,9 +152,9 @@ impl Widgets {
         window.set_property_window_position(gtk::WindowPosition::Center);
         window.set_titlebar(Some(&header.container));
         window.add(&view_stack);
-        window.show_all();
+        window.show();
         window.set_default_size(500, 250);
-        window.connect_delete_event(move |window, _| {
+        window.connect_close_request(move |window| {
             window.destroy();
             Inhibit(false)
         });
@@ -176,7 +177,7 @@ impl Header {
     pub fn new() -> Self {
         let container = gtk::HeaderBar::new();
         container.set_title(Some("Progress Tracker"));
-        container.set_show_close_button(true);
+        container.set_show_title_buttons(true);
 
         Header { container }
     }
@@ -225,7 +226,7 @@ impl MainView {
         container.attach(&progress, 0, 0, 1, 1);
         container.attach(&button, 0, 1, 1, 1);
         container.set_row_spacing(12);
-        container.set_border_width(6);
+        container.set_property_margin(6);
         container.set_vexpand(true);
         container.set_hexpand(true);
 
diff --git a/src/bin/simple_treeview.rs b/src/bin/simple_treeview.rs
index f2f1c9c..e43deff 100644
--- a/src/bin/simple_treeview.rs
+++ b/src/bin/simple_treeview.rs
@@ -3,9 +3,11 @@
 //! This sample demonstrates how to create a TreeView with a ListStore.
 
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 use gtk::{
     ApplicationWindow, CellRendererText, Label, ListStore, Orientation, TreeView, TreeViewColumn,
@@ -96,7 +98,7 @@ fn build_ui(application: &gtk::Application) {
     // Adding the layout to the window.
     window.add(&vertical_layout);
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/sync_widgets.glade b/src/bin/sync_widgets.glade
index 5f92676..0dc0237 100644
--- a/src/bin/sync_widgets.glade
+++ b/src/bin/sync_widgets.glade
@@ -1,7 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!-- Generated with glade 3.16.1 -->
 <interface>
-  <requires lib="gtk+" version="3.6"/>
   <object class="GtkAdjustment" id="spin_adjustment">
     <property name="upper">130</property>
     <property name="step_increment">1</property>
@@ -13,41 +11,26 @@
     <property name="page_increment">10</property>
   </object>
   <object class="GtkApplicationWindow" id="window">
-    <property name="can_focus">False</property>
     <property name="title" translatable="yes">Enter your age</property>
     <property name="window_position">center</property>
     <property name="default_width">300</property>
     <property name="default_height">20</property>
     <child>
       <object class="GtkBox" id="hbox">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="spacing">5</property>
-        <property name="homogeneous">True</property>
+        <property name="homogeneous">1</property>
         <child>
           <object class="GtkSpinButton" id="spin_button">
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
+            <property name="can_focus">1</property>
             <property name="adjustment">spin_adjustment</property>
           </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="position">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkScale" id="slider">
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
+            <property name="can_focus">1</property>
             <property name="adjustment">scale_adjustment</property>
             <property name="round_digits">1</property>
           </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
         </child>
       </object>
     </child>
diff --git a/src/bin/sync_widgets.rs b/src/bin/sync_widgets.rs
index a47d5e6..21a3e81 100644
--- a/src/bin/sync_widgets.rs
+++ b/src/bin/sync_widgets.rs
@@ -8,6 +8,7 @@ extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 use gtk::Builder;
 
@@ -38,7 +39,7 @@ fn build_ui(application: &gtk::Application) {
     let window: gtk::ApplicationWindow = builder.get_object("window").expect("Couldn't get window");
     window.set_application(Some(application));
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/text_viewer.glade b/src/bin/text_viewer.glade
index 4b8adc1..cf2f250 100644
--- a/src/bin/text_viewer.glade
+++ b/src/bin/text_viewer.glade
@@ -1,67 +1,41 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<!-- Generated with glade 3.16.1 -->
 <interface>
-  <requires lib="gtk+" version="3.0"/>
   <object class="GtkImage" id="image1">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
     <property name="icon_size">2</property>
     <property name="icon_name">document-open</property>
   </object>
   <object class="GtkApplicationWindow" id="window">
-    <property name="can_focus">False</property>
     <property name="title" translatable="yes">Text File Viewer</property>
     <property name="window_position">center</property>
     <property name="default_width">400</property>
     <property name="default_height">480</property>
     <child>
       <object class="GtkBox" id="v_box">
-        <property name="visible">True</property>
-        <property name="can_focus">False</property>
         <property name="orientation">vertical</property>
         <child>
           <object class="GtkToolbar" id="toolbar">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
             <child>
               <object class="GtkToolButton" id="open_button">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
                 <property name="tooltip_text" translatable="yes">Open</property>
-                <property name="is_important">True</property>
+                <property name="is_important">1</property>
                 <property name="label" translatable="yes">Open</property>
-                <property name="use_underline">True</property>
+                <property name="use_underline">1</property>
                 <property name="icon_widget">image1</property>
               </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="homogeneous">True</property>
-              </packing>
             </child>
           </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="position">0</property>
-          </packing>
         </child>
         <child>
           <object class="GtkScrolledWindow" id="scrolled_window">
-            <property name="visible">True</property>
-            <property name="can_focus">True</property>
+            <property name="can_focus">1</property>
+            <property name="expand">1</property>
             <property name="shadow_type">in</property>
             <child>
               <object class="GtkTextView" id="text_view">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
+                <property name="can_focus">1</property>
               </object>
             </child>
           </object>
-          <packing>
-            <property name="expand">True</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
         </child>
       </object>
     </child>
diff --git a/src/bin/text_viewer.rs b/src/bin/text_viewer.rs
index d1187ab..3acb75a 100644
--- a/src/bin/text_viewer.rs
+++ b/src/bin/text_viewer.rs
@@ -3,6 +3,7 @@
 //! A simple text file viewer
 
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use std::env::args;
@@ -11,6 +12,7 @@ use std::io::prelude::*;
 use std::io::BufReader;
 
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 use gtk::Builder;
 
@@ -53,6 +55,7 @@ pub fn build_ui(application: &gtk::Application) {
             Some("Open File"),
             Some(&window),
             gtk::FileChooserAction::Open,
+            &[],
         );
         file_chooser.add_buttons(&[
             ("Open", gtk::ResponseType::Ok),
@@ -75,7 +78,7 @@ pub fn build_ui(application: &gtk::Application) {
         file_chooser.destroy();
     });
 
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/transparent_main_window.rs b/src/bin/transparent_main_window.rs
index eca0636..2f2d98a 100644
--- a/src/bin/transparent_main_window.rs
+++ b/src/bin/transparent_main_window.rs
@@ -5,6 +5,7 @@
 extern crate cairo;
 extern crate gdk;
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use gio::prelude::*;
@@ -15,22 +16,26 @@ use std::env::args;
 
 fn build_ui(application: &gtk::Application) {
     let window = ApplicationWindow::new(application);
-    set_visual(&window, None);
-
-    window.connect_screen_changed(set_visual);
-    window.connect_draw(draw);
 
     window.set_title("Alpha Demo");
     window.set_default_size(500, 500);
-    window.set_app_paintable(true); // crucial for transparency
+    window.set_opacity(0.4);
+
+    let overlay = gtk::Overlay::new();
+    window.add(&overlay);
 
     let fixed = Fixed::new();
-    window.add(&fixed);
+    overlay.add(&fixed);
     let button = Button::new_with_label("Dummy");
     button.set_size_request(100, 30);
     fixed.add(&button);
 
-    window.show_all();
+    let drawing_area = gtk::DrawingArea::new();
+    drawing_area.set_draw_func(Some(Box::new(draw)));
+    drawing_area.set_property_expand(true);
+    overlay.add(&drawing_area);
+
+    window.show();
 }
 
 fn main() {
@@ -47,18 +52,7 @@ fn main() {
     application.run(&args().collect::<Vec<_>>());
 }
 
-fn set_visual(window: &ApplicationWindow, _screen: Option<&gdk::Screen>) {
-    if let Some(screen) = window.get_screen() {
-        if let Some(ref visual) = screen.get_rgba_visual() {
-            window.set_visual(Some(visual)); // crucial for transparency
-        }
-    }
-}
-
-fn draw(_window: &ApplicationWindow, ctx: &cairo::Context) -> Inhibit {
-    // crucial for transparency
-    ctx.set_source_rgba(1.0, 0.0, 0.0, 0.4);
-    ctx.set_operator(cairo::Operator::Screen);
+fn draw(_drawing_area: &gtk::DrawingArea, ctx: &cairo::Context, _width: i32, _height: i32) {
+    ctx.set_source_rgba(1.0, 0.0, 0.0, 1.0);
     ctx.paint();
-    Inhibit(false)
 }
diff --git a/src/bin/tree_model_sort.rs b/src/bin/tree_model_sort.rs
index ac1326f..5d45605 100644
--- a/src/bin/tree_model_sort.rs
+++ b/src/bin/tree_model_sort.rs
@@ -4,6 +4,7 @@
 
 extern crate gdk;
 extern crate gio;
+extern crate glib;
 extern crate gtk;
 
 use gio::ApplicationExt;
@@ -15,11 +16,10 @@ fn build_ui(application: &gtk::Application) {
     let window = gtk::ApplicationWindow::new(application);
 
     window.set_title("Tree Model Sort Window");
-    window.set_border_width(10);
     window.set_position(gtk::WindowPosition::Center);
     window.set_default_size(350, 70);
 
-    let store = gtk::TreeStore::new(&[gtk::Type::String]);
+    let store = gtk::TreeStore::new(&[glib::Type::String]);
     store.insert_with_values(None, None, &[0], &[&"One"]);
     store.insert_with_values(None, None, &[0], &[&"Two"]);
     store.insert_with_values(None, None, &[0], &[&"Three"]);
@@ -55,9 +55,11 @@ fn build_ui(application: &gtk::Application) {
         );
     });
 
+    treeview.set_property_margin(10);
+
     // We finally add the `TreeView` to the window.
     window.add(&treeview);
-    window.show_all();
+    window.show();
 }
 
 fn main() {
diff --git a/src/bin/treeview.rs b/src/bin/treeview.rs
index 7a990e7..86a9a9a 100644
--- a/src/bin/treeview.rs
+++ b/src/bin/treeview.rs
@@ -9,6 +9,7 @@ extern crate gtk;
 
 use gdk_pixbuf::Pixbuf;
 use gio::prelude::*;
+use glib::prelude::*;
 use gtk::prelude::*;
 use gtk::{
     ApplicationWindow, ButtonsType, CellRendererPixbuf, CellRendererText, DialogFlags,
@@ -94,7 +95,7 @@ fn build_ui(application: &gtk::Application) {
                 );
             }
 
-            gtk::idle_add(clone!(window => move || {
+            glib::idle_add_local(clone!(window => move || {
                 let dialog = MessageDialog::new(Some(&window), DialogFlags::MODAL,
                     MessageType::Error, ButtonsType::Ok, &msg);
                 dialog.run();
@@ -141,7 +142,7 @@ fn build_ui(application: &gtk::Application) {
     split_pane.add(&right_tree);
 
     window.add(&split_pane);
-    window.show_all();
+    window.show();
 }
 
 fn main() {
--
